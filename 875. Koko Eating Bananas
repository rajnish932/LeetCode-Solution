class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        int len = piles.length;
        int max = piles[len - 1];
        if( h == len) return max;
        
        int low = 0;
        int high = max;
        // Minimum speed to eat bananas
        int sp = Integer.MAX_VALUE;
        
        while(low <= high) {
            int mid = low + (high - low) /2 ;   // to avoid overflow
            if(checkPossible(piles, mid, h)) {
                sp = mid;
                high = mid -1;
            } else { low = mid +1; }
        }
        return sp;
        
    }
    private static  boolean checkPossible(int[] piles, int mid, int h) {
         int time = 0;
        for(int i = 0; i< piles.length ;i++) {
            time += (int)Math.ceil(piles[i] * 1.0/ mid);
        }
        if(time <= h) return true;
        else return false;
        
    }
}
