        class Solution {
    public int uniquePathsWithObstacles(int[][] obs) {
         int m = obs.length;
        int n = obs[0].length;
        int[][] dp = new int[m][n];
        //first row is all 1 except when obstacle encountered, after which its all zeros
        for(int i=0; i<m; i++) {
            if(obs[i][0] == 1){
                dp[i][0] = 0;
                break; // everything else beyong this is 0
            } 
            dp[i][0] = 1;
        }
        
        //similar for column
        for(int i=0; i<n; i++) {
            if(obs[0][i] == 1 || (i>0 && dp[0][i-1] == 0)){
                dp[0][i] = 0;
                break;
            }
            dp[0][i] = 1;
        }
        
        //for the rest of the elements
        for(int i=1; i<m; i++) {
            for(int j=1; j<n; j++) {
                dp[i][j] = obs[i][j] == 1 ? 0 : (dp[i-1][j] + dp[i][j-1]);
            }
        }
        return dp[m-1][n-1];
    }
}
