class Solution {
    public int numIslands(char[][] grid) {
        int result = 0;
        
        //// iterating through given grid to find a '1
        for(int i =0;i<grid.length;i++){
            for(int j =0 ;j<grid[0].length;j++){
                if(grid[i][j] == '1'){
                    result++;
                    dfs(grid,i,j);
                }
            }
        }
        return result;
        
    }
    void dfs(char[][] grid, int i,int j){
        if(i < 0|| j<0 || i >= grid.length || j>= grid[0].length || grid[i][j] != '1') return ;
      grid[i][j] = '*'; //// start a group and visit all members of this group using dfs

        // recursive dfs on all neighbours
        dfs(grid ,i+1,j);
        dfs(grid ,i-1,j);
        dfs(grid ,i,j+1);
        dfs(grid ,i,j-1);
    }
}
