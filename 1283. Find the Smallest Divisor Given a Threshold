class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        Arrays.sort(nums);
        int len = nums.length;
        int max = Integer.MAX_VALUE;
        int low = 0;
        int high = nums[len-1];
     
        
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(checkPossible(nums, mid, threshold)) {
                max = mid;
                high = mid -1;
            } else { low = mid +1;}
        }
    
      
        return max;
    }
        private static boolean checkPossible(int[] nums , int mid, int threshold) {
            int divisor = 0;
            for(int i =0; i< nums.length; i++) {
                divisor += (int)Math.ceil(nums[i] * 1.0 /mid);
            }
            if(divisor <= threshold) return true;

        return false;
            }
        
    
}
