package com.lamresearch.dtocm.cProgramming.string;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class PalindromePairs {
    public static void main(String []arg){
        String []words = {"abcd","dcba","lls","s","sssll"};
        System.out.println(palindromePairs(words));

    }
    public  static List<List<Integer>> palindromePairs(String[] words) {
        List<List<Integer>> result = new ArrayList<>();

        int len = words.length;
        for(int i =0;i<len; i++){
            for(int j = i+1;j<len;j++){
                List<Integer> list = new ArrayList<>();
                if(ispalindrome(words[i] + words[j])){
                   list.add(i);
                    list.add(j);
                    result.add(list);
                }

                // Reverse is also possible.

                if(ispalindrome(words[j] + words[i])){
                    List<Integer> list1 = new ArrayList<>();
                    list1.add(j);
                    list1.add(i);
                    result.add(list1);
                    //result.add(Arrays.asList(j,i));
                }

            }

        }
        return result;

    }
    private static boolean ispalindrome(String str){

        int startIndex = 0;
        int endIndex = str.length()-1;

        while(startIndex < endIndex){
            if((str.charAt(startIndex) != str.charAt(endIndex))) return false;
            startIndex++;
            endIndex--;
        }
        return true;


    }
}
