class Solution {
    public int maxProfit(int[] prices) {
        HashMap<String ,Integer> map = new HashMap<>();
        return maxProfitt(0,0,prices,map);// index, buyOrSell(buy -->0, sell-->1 ), prices
        
    }
    public int maxProfitt(int i , int buyOrSell, int []prices,HashMap<String ,Integer> map){
        if(i >= prices.length) return 0;
        
        String key = i+"test"+buyOrSell;
        if(map.containsKey(key)) return map.get(key);
        
        int profit = 0;
        if(buyOrSell == 0){
            int buy = maxProfitt(i+1,1,prices,map) -prices[i];
            int noBuy = maxProfitt(i+1 ,0, prices,map);
            profit = Math.max(buy, noBuy);
        }
        else {
            int sell = maxProfitt(i +2, 0,prices,map) + prices[i];
            int noSell = maxProfitt(i+1 ,1,prices,map);
            profit = Math.max(sell, noSell);
        }
        map.put(key, profit);
        return profit;
    }
}
