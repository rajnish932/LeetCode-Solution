class Solution {
    public int[] searchRange(int[] nums, int target) {
        int n = nums.length;
        int arr[] = {-1,-1};
        

        int leftIdx = binarySearch(nums, target, true);
        if(leftIdx == n || nums[leftIdx] != target) return arr;
        
        
        arr[0] = leftIdx;
        
        arr[1] = binarySearch(nums, target, false) -1;
        
        return arr;
//         for(int i =0;i<n;i++){
//             if(nums[i] == target){
//                 arr[0] = i;
//                 break;
//             }
//         }
        
//         if(arr[0] == -1) return arr;
//         for(int i = n-1;i >= 0;i--){
//             if(nums[i] == target){
//                 arr[1] = i;
//                 break;
//             }
//         }
       
        
//         return arr;
    }
    
    public int binarySearch(int nums[],int  target, boolean left){
        int lo= 0;
        int high = nums.length;
        
        while(lo < high){
            int mid = (lo + high)/2;
            if(nums[mid] > target || left && target == nums[mid]) high = mid;
            else {
                lo = mid+1;
            }
        }
        return lo;
    }
}
