/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<Integer> list = new ArrayList<>();
        List<List<Integer>> output = new ArrayList<>();
        helper(root, sum, list, output);
        return output;
    }
    
    public void helper(TreeNode node, int sum, List<Integer> list, List<List<Integer>> output) {
        if (node == null) return;
        list.add(node.val);
        if (sum == node.val && node.left == null && node.right == null) {
            output.add(list);
        } else {
        
            sum -= node.val;
            helper(node.left, sum, new ArrayList(list), output); 
            helper(node.right, sum, new ArrayList(list), output); 
        }
    }

}
