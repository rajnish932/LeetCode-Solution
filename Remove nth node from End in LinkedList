/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int count = 0;
        ListNode node = head;
        while(node != null){
            count++;
            node = node.next;
        }
        if(n>count) return head;
        else if(n == count) return head.next;
        
    else{
        int diff = count - n;
        ListNode prev = null;
        ListNode curr = head;
        
        for(int i =0;i<diff; i++){
            prev = curr;
            curr = curr.next;
        }
        prev.next = curr.next;
    }
        return head;
        
    }
}
