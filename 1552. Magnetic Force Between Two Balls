class Solution {
    public int maxDistance(int[] position, int m) {
        
        Arrays.sort(position);
        
        int len = position.length;
        int  low = 0;
        int high = position[len-1];
        int bestMinimumGap = 0;
        
        while ( low < high) {
            
            int mid = (low + high)/2;
            if(canPlace(mid, position, m)) {
                low = mid+1;
                bestMinimumGap = mid;
            } else {
                high = mid;
            }
        }
        return bestMinimumGap;
    }
    public boolean canPlace(int mid, int[] position, int m) {
        int placed = 1;
        int lastPlaced = position[0];
        for(int i =1;i< position.length; i++) {
            if(position[i] - lastPlaced >= mid) {
                placed++;
                lastPlaced = position[i];
                
            }
        }
        if(placed >= m) return true;
        else return false;
    }
}
