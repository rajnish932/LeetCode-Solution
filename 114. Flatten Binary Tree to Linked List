class Solution {
    public void flatten(TreeNode root) {
        
        // Chacke base condition
        
        if(root == null || root.left == null && root.right == null) return;
        
        if(root.left != null){
            flatten(root.left);
            
            // Store right child
            TreeNode tempNode = root.right;
            
            // Move right to left Child
            root.right = root.left;
            root.left = null;
            
            //Copy current Node
            TreeNode currentNode = root.right;
            
            // Iterate current node
            while(currentNode.right != null){
                currentNode = currentNode.right;
                
            }
            currentNode.right = tempNode;
            
        }
        
        if(root.right != null){
            flatten(root.right);
            
        }
        
    }
}
