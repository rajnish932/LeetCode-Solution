class Solution {
    public int lastStoneWeight(int[] stones) {
        PriorityQueue<Integer> maxHeap = new PriorityQueue(Collections.reverseOrder());

       // PriorityQueue<Integer> maxHeap = new PriorityQueue();
        for(int i =0;i<stones.length;i++)
            maxHeap.add(stones[i]);
        
         while(maxHeap.size() >=2){
             int last = maxHeap.poll();
             int secoundLast = maxHeap.poll();
             
             if(last != secoundLast){
                 int newStone = last- secoundLast;
                 maxHeap.add(newStone);
             }
         }
        if(maxHeap.isEmpty()) return 0;
        
        
        return maxHeap.poll();
        
    }
}
